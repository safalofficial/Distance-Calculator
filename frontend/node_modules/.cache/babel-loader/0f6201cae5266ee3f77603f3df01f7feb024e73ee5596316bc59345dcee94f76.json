{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.Aryal\\\\Downloads\\\\New folder (3)\\\\distance-calculator\\\\src\\\\DistanceCalculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport * as XLSX from \"xlsx\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DistanceCalculator = () => {\n  _s();\n  const [excelData, setExcelData] = useState([]);\n  const [results, setResults] = useState([]);\n  const handleFileUpload = event => {\n    const file = event.target.files[0];\n    const reader = new FileReader();\n    reader.onload = e => {\n      const workbook = XLSX.read(e.target.result, {\n        type: \"binary\"\n      });\n      const sheetName = workbook.SheetNames[0];\n      const sheet = workbook.Sheets[sheetName];\n      const data = XLSX.utils.sheet_to_json(sheet);\n      setExcelData(data);\n    };\n    reader.readAsBinaryString(file);\n  };\n  const calculateDistances = async () => {\n    const apiKey = \"YOUR_GOOGLE_API_KEY\"; // Replace with your API key\n    const distances = [];\n    for (const row of excelData) {\n      const {\n        Location1,\n        Location2,\n        ArriveBy\n      } = row; // Adjust columns to match your Excel file\n      try {\n        const response = await axios.get(`https://maps.googleapis.com/maps/api/distancematrix/json`, {\n          params: {\n            origins: Location1,\n            destinations: Location2,\n            key: apiKey,\n            arrival_time: ArriveBy ? new Date(ArriveBy).getTime() / 1000 : undefined\n          }\n        });\n        const distanceInfo = response.data.rows[0].elements[0];\n        distances.push({\n          Location1,\n          Location2,\n          distance: distanceInfo.distance.text,\n          duration: distanceInfo.duration.text\n        });\n      } catch (error) {\n        console.error(\"Error fetching distance:\", error);\n      }\n    }\n    setResults(distances);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Driving Distance Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \".xlsx, .xls\",\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: calculateDistances,\n      disabled: !excelData.length,\n      children: \"Calculate Distances\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), results.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Location 2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Distance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Duration\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: results.map((result, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.Location1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.Location2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.distance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: result.duration\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(DistanceCalculator, \"XvhY1sF9MzCxfqzoesYLuaBpSdM=\");\n_c = DistanceCalculator;\nexport default DistanceCalculator;\nvar _c;\n$RefreshReg$(_c, \"DistanceCalculator\");","map":{"version":3,"names":["React","useState","XLSX","axios","jsxDEV","_jsxDEV","DistanceCalculator","_s","excelData","setExcelData","results","setResults","handleFileUpload","event","file","target","files","reader","FileReader","onload","e","workbook","read","result","type","sheetName","SheetNames","sheet","Sheets","data","utils","sheet_to_json","readAsBinaryString","calculateDistances","apiKey","distances","row","Location1","Location2","ArriveBy","response","get","params","origins","destinations","key","arrival_time","Date","getTime","undefined","distanceInfo","rows","elements","push","distance","text","duration","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","onClick","disabled","length","border","map","index","_c","$RefreshReg$"],"sources":["C:/Users/S.Aryal/Downloads/New folder (3)/distance-calculator/src/DistanceCalculator.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport * as XLSX from \"xlsx\";\r\nimport axios from \"axios\";\r\n\r\nconst DistanceCalculator = () => {\r\n  const [excelData, setExcelData] = useState([]);\r\n  const [results, setResults] = useState([]);\r\n\r\n  const handleFileUpload = (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const workbook = XLSX.read(e.target.result, { type: \"binary\" });\r\n      const sheetName = workbook.SheetNames[0];\r\n      const sheet = workbook.Sheets[sheetName];\r\n      const data = XLSX.utils.sheet_to_json(sheet);\r\n      setExcelData(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  };\r\n\r\n  const calculateDistances = async () => {\r\n    const apiKey = \"YOUR_GOOGLE_API_KEY\"; // Replace with your API key\r\n    const distances = [];\r\n\r\n    for (const row of excelData) {\r\n      const { Location1, Location2, ArriveBy } = row; // Adjust columns to match your Excel file\r\n      try {\r\n        const response = await axios.get(\r\n          `https://maps.googleapis.com/maps/api/distancematrix/json`,\r\n          {\r\n            params: {\r\n              origins: Location1,\r\n              destinations: Location2,\r\n              key: apiKey,\r\n              arrival_time: ArriveBy\r\n                ? new Date(ArriveBy).getTime() / 1000\r\n                : undefined,\r\n            },\r\n          }\r\n        );\r\n        const distanceInfo = response.data.rows[0].elements[0];\r\n        distances.push({\r\n          Location1,\r\n          Location2,\r\n          distance: distanceInfo.distance.text,\r\n          duration: distanceInfo.duration.text,\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching distance:\", error);\r\n      }\r\n    }\r\n\r\n    setResults(distances);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Driving Distance Calculator</h1>\r\n      <input type=\"file\" accept=\".xlsx, .xls\" onChange={handleFileUpload} />\r\n      <button onClick={calculateDistances} disabled={!excelData.length}>\r\n        Calculate Distances\r\n      </button>\r\n      {results.length > 0 && (\r\n        <table border=\"1\">\r\n          <thead>\r\n            <tr>\r\n              <th>Location 1</th>\r\n              <th>Location 2</th>\r\n              <th>Distance</th>\r\n              <th>Duration</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {results.map((result, index) => (\r\n              <tr key={index}>\r\n                <td>{result.Location1}</td>\r\n                <td>{result.Location2}</td>\r\n                <td>{result.distance}</td>\r\n                <td>{result.duration}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DistanceCalculator;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}